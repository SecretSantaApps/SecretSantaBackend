openapi: "3.0.3"
info:
  title: "SecretSantaBackend API"
  description: "SecretSantaBackend API"
  version: "2.0.0"
servers:
  - url: "https://santa.s.kheynov.ru"
paths:
  /api/v1/auth/email/login:
    post:
      description: ""
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
              examples:
                Example#1:
                  value: "No client id provided"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TokenPair"
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Wrong password or email"
  /api/v1/auth/email/register:
    post:
      description: ""
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
              examples:
                Example#1:
                  value: "No client id provided"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TokenPair"
        "409":
          description: "Conflict"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User already exists"
  /api/v1/auth/refresh:
    post:
      description: ""
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Refresh token expired"
                Example#2:
                  value: "Invalid refresh token"
                Example#3:
                  value: "No refresh token provided"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TokenPair"
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Forbidden"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
  /api/v1/avatars:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/AvatarDTO"
  /api/v1/game:
    get:
      description: ""
      parameters:
        - name: "id"
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "Connection"
          in: "header"
          required: true
          schema:
            type: "string"
        - name: "Upgrade"
          in: "header"
          required: true
          schema:
            type: "string"
        - name: "Sec-WebSocket-Key"
          in: "header"
          required: true
          schema:
            type: "string"
      responses:
        "101":
          description: "Switching Protocols"
          headers:
            Connection:
              required: true
              schema:
                type: "string"
            Upgrade:
              required: true
              schema:
                type: "string"
            Sec-WebSocket-Accept:
              required: true
              schema:
                type: "string"
  /api/v1/game/accept:
    post:
      description: ""
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "No access token provided"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
              examples:
                Example#1:
                  value: "User not in room"
                Example#2:
                  value: "User not exists"
                Example#3:
                  value: "Room not exists"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Something went wrong"
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/v1/game/info:
    get:
      description: ""
      parameters:
        - name: "id"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "No access token provided"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User not exists"
                Example#2:
                  value: "Room not exists"
                Example#3:
                  value: "Wrong room name"
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/InfoDetails"
  /api/v1/game/join:
    post:
      description: ""
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "No access token provided"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
              examples:
                Example#1:
                  value: "User not exists"
                Example#2:
                  value: "Room not exists"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Something went wrong"
        "409":
          description: "Conflict"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User already in room"
                Example#2:
                  value: "Game already started"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/v1/game/kick:
    post:
      description: ""
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "No access token provided"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
              examples:
                Example#1:
                  value: "You should use /leave instead of /kick"
                Example#2:
                  value: "User not in the room"
                Example#3:
                  value: "User not exists"
                Example#4:
                  value: "Room not exists"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Something went wrong"
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "object"
        "409":
          description: "Conflict"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Game already started"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/v1/game/leave:
    post:
      description: ""
      parameters:
        - name: "id"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "No access token provided"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User not exists"
                Example#2:
                  value: "Room not exists"
                Example#3:
                  value: "Wrong room id"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Something went wrong"
        "409":
          description: "Conflict"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Game already started"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User not in the room"
  /api/v1/game/start:
    post:
      description: ""
      parameters:
        - name: "id"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "No access token provided"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Not enough users to start playing"
                Example#2:
                  value: "User not exists"
                Example#3:
                  value: "Room not exists"
                Example#4:
                  value: "Wrong room id"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Something went wrong"
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "object"
        "409":
          description: "Conflict"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Game already started"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
        "406":
          description: "Not Acceptable"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You have active requests"
  /api/v1/game/stop:
    post:
      description: ""
      parameters:
        - name: "id"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "No access token provided"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User not exists"
                Example#2:
                  value: "Room not exists"
                Example#3:
                  value: "Wrong room id"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Something went wrong"
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "object"
        "409":
          description: "Conflict"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Game already stopped"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/v1/room:
    get:
      description: ""
      parameters:
        - name: "id"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "No access token provided"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User not exists"
                Example#2:
                  value: "Room not exists"
                Example#3:
                  value: "Wrong room id"
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Room"
    post:
      description: ""
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
              examples:
                Example#1:
                  value: "User not exists"
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "No access token provided"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Something went wrong"
                Example#2:
                  value: "Something went wrong"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Room"
    patch:
      description: ""
      parameters:
        - name: "id"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "No access token provided"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
              examples:
                Example#1:
                  value: "User not exists"
                Example#2:
                  value: "Room not exists"
                Example#3:
                  value: "Wrong room id"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Something went wrong"
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
    delete:
      description: ""
      parameters:
        - name: "id"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User Not Exists"
                Example#2:
                  value: "Room not exists"
                Example#3:
                  value: "Wrong room id"
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "No access token provided"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Something went wrong"
        "403":
          description: "Forbidden"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/v1/user:
    get:
      description: ""
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "No access token provided"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Something went wrong"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserInfo"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User not found"
    patch:
      description: ""
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "No access token provided"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "object"
              examples:
                Example#1:
                  value: "Avatar not found"
                Example#2:
                  value: "User not found"
                Example#3:
                  value: "No data provided"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Something went wrong"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
    delete:
      description: ""
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "No access token provided"
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Something went wrong"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User not found"
  /api/v1/user/rooms:
    get:
      description: ""
      responses:
        "401":
          description: "Unauthorized"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "No access token provided"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/RoomInfo"
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "User not found"
components:
  schemas:
    RefreshToken:
      type: "object"
      properties:
        token:
          type: "string"
        expiresAt:
          type: "integer"
          format: "int64"
    TokenPair:
      type: "object"
      properties:
        accessToken:
          type: "string"
        refreshToken:
          $ref: "#/components/schemas/RefreshToken"
    AvatarDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        image:
          type: "string"
    UserRoomInfo:
      type: "object"
      properties:
        userId:
          type: "string"
        username:
          type: "string"
        address:
          type: "string"
        wishlist:
          type: "string"
        avatar:
          type: "string"
        accepted:
          type: "boolean"
    InfoDetails:
      type: "object"
      properties:
        roomId:
          type: "string"
        roomName:
          type: "string"
        ownerId:
          type: "string"
        date:
          type: "string"
          format: "date"
        maxPrice:
          type: "integer"
          format: "int32"
        users:
          type: "array"
          items:
            $ref: "#/components/schemas/UserRoomInfo"
        recipient:
          type: "string"
    Room:
      type: "object"
      properties:
        name:
          type: "string"
        id:
          type: "string"
        date:
          type: "string"
          format: "date"
        ownerId:
          type: "string"
        playableOwner:
          type: "boolean"
        maxPrice:
          type: "integer"
          format: "int32"
        gameStarted:
          type: "boolean"
        membersCount:
          type: "integer"
          format: "int32"
    UserInfo:
      type: "object"
      properties:
        userId:
          type: "string"
        username:
          type: "string"
        email:
          type: "string"
        address:
          type: "string"
        avatar:
          type: "string"
    RoomInfo:
      type: "object"
      properties:
        name:
          type: "string"
        id:
          type: "string"
        date:
          type: "string"
          format: "date"
        ownerId:
          type: "string"
        playableOwner:
          type: "boolean"
        maxPrice:
          type: "integer"
          format: "int32"
        gameStarted:
          type: "boolean"
        membersCount:
          type: "integer"
          format: "int32"
        accepted:
          type: "boolean"